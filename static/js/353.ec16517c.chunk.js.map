{"version":3,"file":"static/js/353.ec16517c.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Profile/Profile.module.css?b512","webpack://my-app/./src/components/ProfileData/ProfileData.module.css?a02a","components/ProfileData/ProfileData.jsx","webpack://my-app/./src/components/Post/Post.module.css?4903","components/Post/Post.js","webpack://my-app/./src/components/MyPosts/MyPosts.module.css?3104","webpack://my-app/./src/components/MyPosts/Newpost/Newpost.module.css?5568","components/MyPosts/Newpost/Newpost.jsx","components/MyPosts/Newpost/NewpostContainer.jsx","components/MyPosts/MyPosts.js","components/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileStatusHooks.jsx","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Content\":\"Profile_Content__5tdw+\",\"img\":\"Profile_img__D-lc4\",\"Status\":\"Profile_Status__GnALK\"};","// extracted by mini-css-extract-plugin\nexport default {\"userNickname\":\"ProfileData_userNickname__BZj4x\",\"item\":\"ProfileData_item__XHF+F\"};","import css from './ProfileData.module.css';\r\nimport avatar from '../../images/i.jpg'\r\nimport Preloader from '../common/Preloader/Preloader';\r\n\r\nconst ProfileData = (props) => {\r\n\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    } else {\r\n        const mainPhotoSelected = (e) => {\r\n            if (e.target.files.length) {\r\n                props.savePhoto(e.target.files[0])\r\n            }\r\n        }\r\n        return (\r\n            <div className={css.item}>\r\n                <img src={props.profile.photos.small === null ? avatar : props.profile.photos.small} alt=\"avatar\" />\r\n                {props.isOwner && <input type={'file'} onChange={mainPhotoSelected} />}\r\n                <div className={css.userNickname}>{props.profile.fullName}</div>\r\n                <ul className=\"Data\">\r\n                    <li>\r\n                        {props.profile.aboutMe}\r\n                    </li>\r\n                    <li>\r\n                        {props.profile.lookingForAJobDescription}\r\n                    </li>\r\n                    <li>\r\n                        {props.profile.contacts.facebook}\r\n                    </li>\r\n                    <li>\r\n                        {props.profile.contacts.website}\r\n                    </li>\r\n                    <li>\r\n                        {props.profile.contacts.vk}\r\n                    </li>\r\n                    <li>\r\n                        {props.profile.contacts.twitter}\r\n                    </li>\r\n                    <li>\r\n                        {props.profile.contacts.instagram}\r\n                    </li>\r\n                    <li>\r\n                        {props.profile.contacts.youtube}\r\n                    </li>\r\n                    <li>\r\n                        {props.profile.contacts.github}\r\n                    </li>\r\n                    <li>\r\n                        {props.profile.contacts.mainLink}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    \r\n\r\n}\r\n\r\nexport default ProfileData;","// extracted by mini-css-extract-plugin\nexport default {\"mesage\":\"Post_mesage__J2JPw\",\"likes\":\"Post_likes__r7r3S\"};","import classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={classes.mesage}>\r\n                {props.mesage}\r\n            </div>\r\n            <div className={classes.likes}>\r\n                {props.likes}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"MyPosts_title__YnfBk\",\"item\":\"MyPosts_item__p1d-P\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Newpost_form__cTMbI\",\"label\":\"Newpost_label__mw9Cc\",\"input\":\"Newpost_input__x3srn\",\"submit\":\"Newpost_submit__RQTQ7\"};","import React from 'react';\r\nimport classes from './Newpost.module.css';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from './../../../utils/validators/validators';\r\nimport { Textarea } from './../../FormsControls/FormsControls';\r\n\r\n\r\nlet Newpost = React.memo ( props => {\r\n    \r\n    //let placeholder = props.postsPage.placeholterText;\r\n\r\n    \r\n    //let newPostElement = React.createRef();\r\n    //let onPostChange = () => {\r\n    //    let text = newPostElement.current.value;\r\n    //    props.updateNewPostText(text)\r\n    //}\r\n    \r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <label className={classes.label}>New post</label>\r\n            <AddNewPostForm onSubmit={onAddPost} placeholder='Введите текст...' />\r\n        </>\r\n        \r\n    )\r\n    \r\n})\r\n\r\n\r\n/*\r\nclass Newpost extends React.PureComponent {\r\n\r\n    // если используем extends React.Component, то оптимизируем рендеры с помощью shouldComponentUpdate\r\n    //shouldComponentUpdate (nextProps, nextState) {\r\n    //    return (this.props.postsPage.postsData !== nextProps.postsPage.postsData || this.state !== nextState);\r\n    //}\r\n    \r\n\r\n    render () {\r\n        console.log('rend')\r\n        \r\n        let onAddPost = (values) => {\r\n            this.props.addPost(values.newPostText)\r\n        };\r\n\r\n        return (\r\n            <>\r\n                <label className={classes.label}>New post</label>\r\n                <AddNewPostForm onSubmit={onAddPost} placeholder='Введите текст...' />\r\n            </>\r\n        \r\n        )\r\n    }\r\n    \r\n}\r\n*/\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewpost = React.memo((props) => {\r\n    return (\r\n        <form className={classes.form} onSubmit={props.handleSubmit} >\r\n            <Field component={Textarea} \r\n                name='newPostText' \r\n                placeholder={props.placeholder} \r\n                validate={[required, maxLength10]} />\r\n            {/*\r\n            <textarea \r\n                className={classes.input} \r\n                ref={newPostElement} \r\n                placeholder={placeholder} \r\n                onChange={onPostChange} \r\n                value={props.postsPage.newPostText}\r\n            />*/}\r\n            <button \r\n            //onClick={onAddPost} \r\n            type=\"submit\" \r\n            className={classes.submit}>\r\n                Add post\r\n            </button>\r\n        </form>\r\n    )\r\n})\r\n\r\nlet AddNewPostForm = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewpost);\r\n\r\nexport default Newpost;","import { \r\n    //updateNewPostTextActionCreator, \r\n    addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport Newpost from './Newpost';\r\nimport {connect} from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        postsPage: state.postsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        /*\r\n        updateNewPostText: (text) => {\r\n            dispatch(updateNewPostTextActionCreator(text));\r\n        },*/\r\n        addPost: (newPostText)=> {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        },\r\n    }\r\n}\r\n\r\nconst NewpostContainer = connect(mapStateToProps, mapDispatchToProps)(Newpost);\r\n\r\nexport default NewpostContainer;\r\n\r\n","import Post from '../Post/Post';\r\nimport classes from './MyPosts.module.css';\r\nimport NewpostContainer from './Newpost/NewpostContainer';\r\n\r\nconst MyPosts = (props) => {\r\n    \r\n    let postList = props.postsPage.postsData.map( post => <Post mesage={post.post} likes={post.likes} id={post.id} key={post.id}/> )\r\n\r\n    return (\r\n        <div>\r\n            <h2 className={classes.title}>My posts</h2>\r\n            <div className={classes.item}>\r\n                <NewpostContainer\r\n                    //postsPage={props.postsPage}\r\n                    //dispatch={props.dispatch} \r\n                />\r\n            </div>\r\n            {postList}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts;","import { addPostActionCreator } from '../../redux/profile-reducer';\r\nimport {connect} from 'react-redux';\r\nimport MyPosts from './MyPosts';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        postsPage: state.postsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: ()=> {\r\n            dispatch(addPostActionCreator());\r\n        },\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React, {useState, useEffect} from \"react\";\r\nimport style from \"./Profile.module.css\"\r\n\r\n\r\nconst ProfileStatusHooks = (props) => {\r\n    \r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n    return (\r\n        <>\r\n        {\r\n            !editMode && <span className={style.Status} onDoubleClick={activateEditMode}>{props.status || 'No status'}</span>\r\n        }\r\n        {\r\n            editMode && <input onChange={onStatusChange} autoFocus onBlur={deactivateEditMode} value={status} /> \r\n        }\r\n    </>)\r\n}\r\n\r\nexport default ProfileStatusHooks;","import FirstPofileImg from '../../images/first_image.jpg';\r\nimport classes from './Profile.module.css';\r\nimport ProfileData from './../ProfileData/ProfileData';\r\nimport MyPostsContainer from './../MyPosts/MyPostsContainer';\r\n//import ProfileStatus from './ProfileStatus';\r\nimport ProfileStatusHooks from './ProfileStatusHooks';\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={classes.Content}>\r\n            <img src={FirstPofileImg} alt=\"first profile\" className={classes.img} />\r\n            <ProfileData profile={props.profile} \r\n            isOwner={props.isOwner}\r\n            savePhoto={props.savePhoto}\r\n            />\r\n            {/*<ProfileStatus status={props.status} updateStatus={props.updateStatus} />*/}\r\n            <ProfileStatusHooks status={props.status} updateStatus={props.updateStatus} />\r\n            <div className=\"\">\r\n                <MyPostsContainer />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import {connect} from 'react-redux';\r\nimport Profile from './Profile';\r\nimport React from 'react';\r\nimport { getOnUserProfileThink, getStatusThink, updateStatusThink, savePhoto } from '../../redux/profile-reducer';\r\nimport { compose } from 'redux';\r\n//import { withAuthRedirect } from './../../hoc/withAuthRedirect';\r\nimport { withRouter } from '../common/withRouter/withRouter';\r\nimport {Navigate} from \"react-router-dom\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n\r\n    refreshProfile () {\r\n        let userId = this.props.router.params.userId\r\n        if (!userId) {\r\n            userId = this.props.myId\r\n        }\r\n        this.props.getOnUserProfileThink(userId);\r\n        this.props.getStatusThink(userId);\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate (prevProps, prevState, snapshot) {\r\n        if (this.props.router.params.userId !== prevProps.router.params.userId){\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render () {\r\n        if (!this.props.isAuth && !this.props.router.params.userId) {\r\n            return <Navigate to={'/login'} />\r\n        }\r\n        return <Profile {...this.props} \r\n            isOwner={!this.props.router.params.userId}\r\n            savePhoto={this.props.savePhoto}\r\n            profile={this.props.profile} \r\n            status={this.props.status} \r\n            updateStatus={this.props.updateStatusThink} />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.postsPage.profile,\r\n    status: state.postsPage.status,\r\n    myId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\n/*  --Вызов кода без compose\r\nlet AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n\r\nexport default connect(mapStateToProps, {getOnUserProfileThink})(withRouter(AuthRedirectComponent));\r\n*/\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getOnUserProfileThink, getStatusThink, updateStatusThink, savePhoto}),\r\n    withRouter,\r\n    //withAuthRedirect,\r\n)(ProfileContainer);\r\n"],"names":["props","profile","className","css","src","photos","small","avatar","alt","isOwner","type","onChange","e","target","files","length","savePhoto","fullName","aboutMe","lookingForAJobDescription","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","Preloader","classes","mesage","likes","Newpost","React","AddNewPostForm","onSubmit","values","addPost","newPostText","placeholder","maxLength10","maxLengthCreator","AddNewpost","handleSubmit","Field","component","Textarea","name","validate","required","reduxForm","form","connect","state","postsPage","dispatch","addPostActionCreator","postList","postsData","map","post","id","MyPosts","useState","editMode","setEditMode","status","setStatus","useEffect","style","onDoubleClick","currentTarget","value","autoFocus","onBlur","updateStatus","FirstPofileImg","ProfileContainer","userId","this","router","params","myId","getOnUserProfileThink","getStatusThink","refreshProfile","prevProps","prevState","snapshot","isAuth","updateStatusThink","to","compose","auth","withRouter"],"sourceRoot":""}