{"version":3,"file":"static/js/807.bfd110ac.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Profile/Profile.module.css?b512","webpack://my-app/./src/components/ProfileData/ProfileData.module.css?a02a","components/ProfileData/ProfileDataForm.jsx","components/ProfileData/ProfileData.jsx","webpack://my-app/./src/components/Post/Post.module.css?4903","components/Post/Post.js","webpack://my-app/./src/components/MyPosts/MyPosts.module.css?3104","webpack://my-app/./src/components/MyPosts/Newpost/Newpost.module.css?5568","components/MyPosts/Newpost/Newpost.jsx","components/MyPosts/Newpost/NewpostContainer.jsx","components/MyPosts/MyPosts.js","components/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileStatusHooks.jsx","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Content\":\"Profile_Content__5tdw+\",\"img\":\"Profile_img__D-lc4\",\"Status\":\"Profile_Status__GnALK\"};","// extracted by mini-css-extract-plugin\nexport default {\"userNickname\":\"ProfileData_userNickname__BZj4x\",\"item\":\"ProfileData_item__XHF+F\"};","import { createField, Input } from './../FormsControls/FormsControls';\r\nimport { reduxForm } from 'redux-form';\r\n\r\n\r\nconst ProfileDataForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <button>save</button>\r\n        {!!props.error && <div>{props.error}</div>}\r\n        <ul className=\"Data\">\r\n            <li>\r\n                {createField('Full name', 'fullName', [], Input)}\r\n            </li>\r\n            <li>\r\n                {createField('about me', 'aboutMe', [], Input)}\r\n            </li>\r\n            <li>\r\n                looking for a job: {createField('', 'lookingForAJob', [], Input, {type: 'checkbox'})}\r\n            </li>\r\n            <li>\r\n                {createField('professional skills', 'lookingForAJobDescription', [], Input)}\r\n            </li>\r\n            <li>\r\n                {createField('facebook', 'contacts.facebook', [], Input)}\r\n            </li>\r\n            <li>\r\n                {createField('website', 'contacts.website', [], Input)}\r\n            </li>\r\n            <li>\r\n                {createField('vk', 'contacts.vk', [], Input)}\r\n            </li>\r\n            <li>\r\n                {createField('twitter', 'contacts.twitter', [], Input)}\r\n            </li>\r\n            <li>\r\n                {createField('instagram', 'contacts.instagram', [], Input)}\r\n            </li>\r\n            <li>\r\n                {createField('youtube', 'contacts.youtube', [], Input)}\r\n            </li>\r\n            <li>\r\n                {createField('github', 'contacts.github', [], Input)}\r\n            </li>\r\n            <li>\r\n                {createField('mainLink', 'contacts.mainLink', [], Input)}\r\n            </li>\r\n        </ul>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormRedux = reduxForm({form: 'edit-profile'})(ProfileDataForm);\r\n\r\nexport default ProfileDataFormRedux;","import css from './ProfileData.module.css';\r\nimport avatar from '../../images/i.jpg'\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport ProfileDataForm from './ProfileDataForm';\r\nimport { useState } from 'react';\r\n\r\nconst ProfileData = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    let goToEditMode = () => {\r\n        setEditMode(!editMode);\r\n    }\r\n\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    } else {\r\n        const mainPhotoSelected = (e) => {\r\n            if (e.target.files.length) {\r\n                props.savePhoto(e.target.files[0])\r\n            }\r\n        }\r\n\r\n        const onSubmit = async (formData) => {\r\n            props.saveProfile(formData).then(\r\n                () => {\r\n                    setEditMode(false);\r\n                }\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div className={css.item}>\r\n                <img src={props.profile.photos.small === null ? avatar : props.profile.photos.small} alt=\"avatar\" />\r\n                {props.isOwner && <input type={'file'} onChange={mainPhotoSelected} />}\r\n                <div className={css.userNickname}>{props.profile.fullName}</div>\r\n                {editMode \r\n                ? <ProfileDataForm initialValues={props.profile} onSubmit={onSubmit} /> \r\n                : <ProfileInfo profile={props.profile} isOwner={props.isOwner} goToEditMode={goToEditMode} />}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    \r\n\r\n}\r\n\r\nconst ProfileInfo = (props) => {\r\n    return <>\r\n        {props.isOwner &&\r\n            <div>\r\n            <button onClick={props.goToEditMode}>Edit</button>\r\n        </div>}\r\n        <ul className=\"Data\">\r\n            <li>\r\n                {props.profile.aboutMe}\r\n            </li>\r\n            <li>\r\n                looking for a job: {props.profile.lookingForAJob ? 'yes' : 'not'}\r\n            </li>\r\n            <li>\r\n                professional skills: {props.profile.lookingForAJobDescription}\r\n            </li>\r\n            <li>\r\n                {props.profile.contacts.facebook}\r\n            </li>\r\n            <li>\r\n                {props.profile.contacts.website}\r\n            </li>\r\n            <li>\r\n                {props.profile.contacts.vk}\r\n            </li>\r\n            <li>\r\n                {props.profile.contacts.twitter}\r\n            </li>\r\n            <li>\r\n                {props.profile.contacts.instagram}\r\n            </li>\r\n            <li>\r\n                {props.profile.contacts.youtube}\r\n            </li>\r\n            <li>\r\n                {props.profile.contacts.github}\r\n            </li>\r\n            <li>\r\n                {props.profile.contacts.mainLink}\r\n            </li>\r\n        </ul>\r\n    </>\r\n}\r\n\r\nexport default ProfileData;","// extracted by mini-css-extract-plugin\nexport default {\"mesage\":\"Post_mesage__J2JPw\",\"likes\":\"Post_likes__r7r3S\"};","import classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={classes.mesage}>\r\n                {props.mesage}\r\n            </div>\r\n            <div className={classes.likes}>\r\n                {props.likes}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"MyPosts_title__YnfBk\",\"item\":\"MyPosts_item__p1d-P\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Newpost_form__cTMbI\",\"label\":\"Newpost_label__mw9Cc\",\"input\":\"Newpost_input__x3srn\",\"submit\":\"Newpost_submit__RQTQ7\"};","import React from 'react';\r\nimport classes from './Newpost.module.css';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from './../../../utils/validators/validators';\r\nimport { Textarea } from './../../FormsControls/FormsControls';\r\n\r\n\r\nlet Newpost = React.memo ( props => {\r\n    \r\n    //let placeholder = props.postsPage.placeholterText;\r\n\r\n    \r\n    //let newPostElement = React.createRef();\r\n    //let onPostChange = () => {\r\n    //    let text = newPostElement.current.value;\r\n    //    props.updateNewPostText(text)\r\n    //}\r\n    \r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <label className={classes.label}>New post</label>\r\n            <AddNewPostForm onSubmit={onAddPost} placeholder='Введите текст...' />\r\n        </>\r\n        \r\n    )\r\n    \r\n})\r\n\r\n\r\n/*\r\nclass Newpost extends React.PureComponent {\r\n\r\n    // если используем extends React.Component, то оптимизируем рендеры с помощью shouldComponentUpdate\r\n    //shouldComponentUpdate (nextProps, nextState) {\r\n    //    return (this.props.postsPage.postsData !== nextProps.postsPage.postsData || this.state !== nextState);\r\n    //}\r\n    \r\n\r\n    render () {\r\n        console.log('rend')\r\n        \r\n        let onAddPost = (values) => {\r\n            this.props.addPost(values.newPostText)\r\n        };\r\n\r\n        return (\r\n            <>\r\n                <label className={classes.label}>New post</label>\r\n                <AddNewPostForm onSubmit={onAddPost} placeholder='Введите текст...' />\r\n            </>\r\n        \r\n        )\r\n    }\r\n    \r\n}\r\n*/\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewpost = React.memo((props) => {\r\n    return (\r\n        <form className={classes.form} onSubmit={props.handleSubmit} >\r\n            <Field component={Textarea} \r\n                name='newPostText' \r\n                placeholder={props.placeholder} \r\n                validate={[required, maxLength10]} />\r\n            {/*\r\n            <textarea \r\n                className={classes.input} \r\n                ref={newPostElement} \r\n                placeholder={placeholder} \r\n                onChange={onPostChange} \r\n                value={props.postsPage.newPostText}\r\n            />*/}\r\n            <button \r\n            //onClick={onAddPost} \r\n            type=\"submit\" \r\n            className={classes.submit}>\r\n                Add post\r\n            </button>\r\n        </form>\r\n    )\r\n})\r\n\r\nlet AddNewPostForm = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewpost);\r\n\r\nexport default Newpost;","import { \r\n    //updateNewPostTextActionCreator, \r\n    addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport Newpost from './Newpost';\r\nimport {connect} from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        postsPage: state.postsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        /*\r\n        updateNewPostText: (text) => {\r\n            dispatch(updateNewPostTextActionCreator(text));\r\n        },*/\r\n        addPost: (newPostText)=> {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        },\r\n    }\r\n}\r\n\r\nconst NewpostContainer = connect(mapStateToProps, mapDispatchToProps)(Newpost);\r\n\r\nexport default NewpostContainer;\r\n\r\n","import Post from '../Post/Post';\r\nimport classes from './MyPosts.module.css';\r\nimport NewpostContainer from './Newpost/NewpostContainer';\r\n\r\nconst MyPosts = (props) => {\r\n    \r\n    let postList = props.postsPage.postsData.map( post => <Post mesage={post.post} likes={post.likes} id={post.id} key={post.id}/> )\r\n\r\n    return (\r\n        <div>\r\n            <h2 className={classes.title}>My posts</h2>\r\n            <div className={classes.item}>\r\n                <NewpostContainer\r\n                    //postsPage={props.postsPage}\r\n                    //dispatch={props.dispatch} \r\n                />\r\n            </div>\r\n            {postList}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts;","import { addPostActionCreator } from '../../redux/profile-reducer';\r\nimport {connect} from 'react-redux';\r\nimport MyPosts from './MyPosts';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        postsPage: state.postsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: ()=> {\r\n            dispatch(addPostActionCreator());\r\n        },\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React, {useState, useEffect} from \"react\";\r\nimport style from \"./Profile.module.css\"\r\n\r\n\r\nconst ProfileStatusHooks = (props) => {\r\n    \r\n    const [editMode, setEditMode] = useState(false);\r\n    const [status, setStatus] = useState(props.status);\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n    return (\r\n        <>\r\n        {\r\n            !editMode && <span className={style.Status} onDoubleClick={activateEditMode}>{props.status || 'No status'}</span>\r\n        }\r\n        {\r\n            editMode && <input onChange={onStatusChange} autoFocus onBlur={deactivateEditMode} value={status} /> \r\n        }\r\n    </>)\r\n}\r\n\r\nexport default ProfileStatusHooks;","import FirstPofileImg from '../../images/first_image.jpg';\r\nimport classes from './Profile.module.css';\r\nimport ProfileData from './../ProfileData/ProfileData';\r\nimport MyPostsContainer from './../MyPosts/MyPostsContainer';\r\n//import ProfileStatus from './ProfileStatus';\r\nimport ProfileStatusHooks from './ProfileStatusHooks';\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={classes.Content}>\r\n            <img src={FirstPofileImg} alt=\"first profile\" className={classes.img} />\r\n            <ProfileData profile={props.profile} \r\n            isOwner={props.isOwner}\r\n            savePhoto={props.savePhoto}\r\n            saveProfile= {props.saveProfile}\r\n            />\r\n            {/*<ProfileStatus status={props.status} updateStatus={props.updateStatus} />*/}\r\n            <ProfileStatusHooks status={props.status} updateStatus={props.updateStatus} />\r\n            <div className=\"\">\r\n                <MyPostsContainer />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import {connect} from 'react-redux';\r\nimport Profile from './Profile';\r\nimport React from 'react';\r\nimport { getOnUserProfileThink, getStatusThink, updateStatusThink, savePhoto, saveProfile } from '../../redux/profile-reducer';\r\nimport { compose } from 'redux';\r\n//import { withAuthRedirect } from './../../hoc/withAuthRedirect';\r\nimport { withRouter } from '../common/withRouter/withRouter';\r\nimport {Navigate} from \"react-router-dom\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n\r\n    refreshProfile () {\r\n        let userId = this.props.router.params.userId\r\n        if (!userId) {\r\n            userId = this.props.myId\r\n        }\r\n        this.props.getOnUserProfileThink(userId);\r\n        this.props.getStatusThink(userId);\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate (prevProps, prevState, snapshot) {\r\n        if (this.props.router.params.userId !== prevProps.router.params.userId){\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render () {\r\n        if (!this.props.isAuth && !this.props.router.params.userId) {\r\n            return <Navigate to={'/login'} />\r\n        }\r\n        return <Profile {...this.props} \r\n            isOwner={!this.props.router.params.userId}\r\n            savePhoto={this.props.savePhoto}\r\n            saveProfile={this.props.saveProfile}\r\n            profile={this.props.profile} \r\n            status={this.props.status} \r\n            updateStatus={this.props.updateStatusThink} />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.postsPage.profile,\r\n    status: state.postsPage.status,\r\n    myId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\n/*  --Вызов кода без compose\r\nlet AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n\r\nexport default connect(mapStateToProps, {getOnUserProfileThink})(withRouter(AuthRedirectComponent));\r\n*/\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getOnUserProfileThink, getStatusThink, updateStatusThink, savePhoto, saveProfile}),\r\n    withRouter,\r\n    //withAuthRedirect,\r\n)(ProfileContainer);\r\n"],"names":["reduxForm","form","props","onSubmit","handleSubmit","error","className","createField","Input","type","ProfileInfo","isOwner","onClick","goToEditMode","profile","aboutMe","lookingForAJob","lookingForAJobDescription","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","useState","editMode","setEditMode","formData","saveProfile","then","css","src","photos","small","avatar","alt","onChange","e","target","files","length","savePhoto","fullName","initialValues","Preloader","classes","mesage","likes","Newpost","React","AddNewPostForm","values","addPost","newPostText","placeholder","maxLength10","maxLengthCreator","AddNewpost","Field","component","Textarea","name","validate","required","connect","state","postsPage","dispatch","addPostActionCreator","postList","postsData","map","post","id","MyPosts","status","setStatus","useEffect","style","onDoubleClick","currentTarget","value","autoFocus","onBlur","updateStatus","FirstPofileImg","ProfileContainer","userId","this","router","params","myId","getOnUserProfileThink","getStatusThink","refreshProfile","prevProps","prevState","snapshot","isAuth","updateStatusThink","to","compose","auth","withRouter"],"sourceRoot":""}